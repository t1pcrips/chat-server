name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: "cr.selcloud.ru/t1pcrips"
  IMAGE_NAME: "chat-server"
  CONTAINER_NAME: "chat-server-container"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f Dockerfile . 

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            docker stop $CONTAINER_NAME
            
            docker rm $CONTAINER_NAME
            
            docker run -d -p 50051:50051 --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME 

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check Go Version
        run: go version

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: SetUp Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.3'

      - name: Build
        run: go build -o ./bin/ -v ./...

      - name: Test
        run: go test -v ./...

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: SetUp Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.3'

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.61.0
      - name: Lint
        run: golangci-lint run ./...